# In this SQL, I begin to quantify statistics about customer and order data by querying a database with multiple tables.

# 1. How many orders were placed in January?
SELECT count(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

# 2. How many of those orders were iphones?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderid) = 6
AND orderid <> 'Order ID';

# 3. Select the customer acct. numbers for all orders placed in February.
SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

# 4. Which product was the cheapest one sold in january, and what was the price?
SELECT distinct product
FROM BIT_DB.JanSales
WHERE price in (SELECT min(price) FROM BIT_DB.JanSales);

# 5. What is the total revenue for each product sold in january?
SELECT sum(quantity)*price as revenue, product
FROM BIT_DB.JanSales
GROUP BY product;

# 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT sum(Quantity)
, sum(quantity)*price as Revenue
, product 
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;


#7. How many customers ordered more than 2 products at a time in february and what was the avg amount spent for those customers?
SELECT count(distinct cust.acctnum)
, avg(quantity*price)
FROM BIT_DB.FebSales feb

LEFT JOIN BIT_DB.customers cust
ON feb.orderid = cust.order_id
WHERE feb.quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

#8. List all the products soldin Los Angeles in February, and include how many of each were sold .
SELECT Product, sum(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
